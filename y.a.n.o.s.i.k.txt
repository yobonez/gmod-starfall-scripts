--@name Y.A.N.O.S.I.K
--@author
--@shared 

if SERVER then
    local entWeldedToVel = chip():isWeldedTo()
    
    timer.create("S-czej",0.1, 0, function()
            
        if chip():isWeldedTo():getClass() != "gmod_sent_vehicle_fphysics_base" then
            error("Na samochodzie to daj")
        end
            
        net.start("weldcheck")
        net.writeEntity(entWeldedToVel)
        net.send()
    end)
    
    hook.add("PlayerEnteredVehicle", "pev", function(ply, veh, num)
        enableHud(veh:getDriver(), true)
    end)
    
    hook.add("PlayerLeaveVehicle", "plv", function(ply, veh)
        enableHud(veh:getDriver(), false)
    end)
end

if CLIENT then
    local vehicle
    local vehicleVel = 0
    local resX, resY = render.getResolution()
    
    local spdLimit = 50
    local drawSign = true
    local signFont = render.createFont("DermaLarge", 80, 600, true, nil, nil, nil, nil, nil, nil)
    
    timer.create("C-czej", 0.1, 0, function()
        net.receive("weldcheck", function()
            vehicle = net.readEntity()
            vehicleVel = math.round(vehicle:getLocalVelocity():getLength() * 3600 * 0.0000254)
        end)
    end)
    
    local boolAlarm = false
    timer.create("alarm", 0.276, 0, function()
        if boolAlarm then
            vehicle:emitSound("buttons/blip2.wav", 75, 110, 1, 0)
        end
    end)
    
    local radaryDanger = {}
    timer.create("radarydanger", 0.1, 0, function()
        if table.count(radaryDanger) > 0 then
            boolAlarm = true
            timer.unpause("alarm")
            timer.unpause("pulsatingSign")
        else
            boolAlarm = false
            timer.pause("alarm")
            timer.pause("pulsatingSign")
        end
    end)
    
    hook.add("hudconnected", "HUDConnect", function(ent, ply)
        local frameCount = 0
        local function drawSign()
            render.setColor(Color(255,0,0))
            render.drawFilledCircle(resX/5, resY/1.1, 70)
            render.setColor(Color(255,255,255))
            render.drawFilledCircle(resX/5, resY/1.1, 55)
                                
            render.setColor(Color(0,0,0))
            render.setFont(signFont)
            render.drawText(resX/5.55, resY/1.145, tostring(spdLimit))
        end
        hook.add("drawhud", "HUD", function()
            if frameCount > 60 then
                frameCount = 0
            end
            
            //push
            render.pushViewMatrix({type = "2D"})
            
            //fonty
            local plyPos = ply:getPos()
            // find in cone todo
            local radary = find.byModel("models/maxofs2d/camera.mdl")
            
            for k, radar in ipairs(radary) do
                radarClass = radar:getClass()
                if radarClass == "prop_physics" or radarClass == "starfall_processor" then
                    local radarPos = radar:getPos()
                    local radarPosToScreen = radarPos:toScreen()
                    
                    local radarDist = math.round(plyPos:getDistance(radarPos))
                    local radarDistMetric = radarDist * 0.0254
                    
                    
                    if radarDist <= vehicleVel*spdLimit and vehicleVel > spdLimit then
                        if table.count(radaryDanger) == 0 then
                            table.insert(radaryDanger, radar)
                        end
                        
                        render.setColor(Color(255,0,0))
                        render.drawCircle(radarPosToScreen["x"], radarPosToScreen["y"] -5, 67)
                        render.drawCircle(radarPosToScreen["x"], radarPosToScreen["y"] -5, 70)
                        render.drawCircle(radarPosToScreen["x"], radarPosToScreen["y"] -5, 73)
                        
                        render.setFont("DermaLarge")
                        render.drawText(radarPosToScreen["x"]+90, radarPosToScreen["y"] -5, "RADAR! ZWOLNIJ!", 0)
                        
                        render.setFont("Trebuchet18")
                        render.drawText(radarPosToScreen["x"]+15, radarPosToScreen["y"]+10, math.round(radarDistMetric) .. " m", 0)
                        render.drawText(radarPosToScreen["x"]-60, radarPosToScreen["y"]-40, "Radar " .. k, 0)
                    else
                        if table.count(radaryDanger) > 0 then
                            table.removeByValue(radaryDanger, radar)
                        end
                        
                        render.setColor(Color(0,50,255))
                        render.drawCircle(radarPosToScreen["x"], radarPosToScreen["y"] -5, radarDist/(radarDist*0.05))
                        
                        render.setFont("Trebuchet18")
                        render.drawText(radarPosToScreen["x"]+15, radarPosToScreen["y"]+10, math.round(radarDistMetric) .. " m", 0)
                        render.drawText(radarPosToScreen["x"]-60, radarPosToScreen["y"]-40, "Radar " .. k, 0)
                    end
                end
            end
            
            if boolAlarm and frameCount <= 30 then
                drawSign()
            elseif !boolAlarm then
                drawSign()
            end 
            render.popViewMatrix()
            //pop
            
            frameCount = frameCount + 1
        end)
    end)
end